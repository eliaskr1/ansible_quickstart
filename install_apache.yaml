- name: Install Apache2
  hosts: all
  become: yes
  vars:
    space_text:
      - "E"
      - "L"
      - "I"
      - "A"
      - "S"
  tasks:
  - name: Install Apache2(debian)
    ansible.builtin.package:
      name: apache2
      state: present
    when: ansible_facts['os_family'] == "Debian"

  - name: Install Apache2(redhat)
    ansible.builtin.package:
      name: httpd
      state: present
    when: ansible_facts['os_family'] == "RedHat"

  - name: Ensure Apache is started and enabled(debian)
    ansible.builtin.service:
      name: apache2
      state: started
      enabled: yes
    when: ansible_facts['os_family'] == "Debian"

  - name: Ensure Apache is started and enabled (RedHat-based)
    ansible.builtin.service:
      name: httpd
      state: started
      enabled: yes
    when: ansible_facts['os_family'] == "RedHat"

  - name: Ensure firewall allows http traffic. (Debian)
    ansible.builtin.ufw:
      rule: allow
      port: '80'
      proto: tcp
    when: ansible_facts['os_family'] == "Debian"

  - name: Ensure firewall allows http traffic. (RedHat)
    ansible.builtin.firewalld:
      port: 80/tcp
      permanent: yes
      state: enabled
      immediate: yes
    when: ansible_facts['os_family'] == "RedHat"


  - name: Deploy custom index.html.j2
    ansible.builtin.template:
      src: ./page/index.html.j2
      dest: /var/www/html/index.html
    notify: Restart Apache

  - name: Deploy custom css
    ansible.builtin.template:
      src: ./page/canvas3d.scss
      dest: /var/www/html/canvas3d.scss
    notify: Restart Apache

  - name: Deploy custom js
    ansible.builtin.template:
      src: ./page/canvas.js
      dest: /var/www/html/canvas.js
    notify: Restart Apache


  handlers:
    - name: Restart Apache
      ansible.builtin.service:
        name: "{{ 'apache2' if ansible_facts['os_family'] == 'Debian' else 'httpd' }}"
        state: restarted
